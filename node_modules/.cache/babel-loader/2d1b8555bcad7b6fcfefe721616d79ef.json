{"ast":null,"code":"var _jsxFileName = \"/home/max_ov/Cosas de programacion/Udemy/30React/p2-weather/weather-app/src/components/searchMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../components/style.css\";\nimport WeatherDetails from './WeatherDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchMain() {\n  _s();\n\n  const [searchTerm, seSearchTerm] = useState('Cancun');\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `http://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&units=metric&appid=9bd32898ad03753167ef916bdce83639`;\n      let res = await fetch(url);\n      let data = await res.json();\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weatherType\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weatherType,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search City\",\n          id: \"search\",\n          value: searchTerm,\n          onChange: e => seSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          onClick: getWeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherDetails, { ...tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchMain, \"g8JbuVx1RRVM9HQIwGiWYLWU+ak=\");\n\n_c = SearchMain;\nexport default SearchMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMain\");","map":{"version":3,"sources":["/home/max_ov/Cosas de programacion/Udemy/30React/p2-weather/weather-app/src/components/searchMain.js"],"names":["React","useEffect","useState","WeatherDetails","SearchMain","searchTerm","seSearchTerm","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","temp","humidity","pressure","main","weatherType","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,yBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA2BJ,QAAQ,CAAC,QAAD,CAAzC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,cAAc,GAAE,YAAU;AAC5B,QAAG;AACC,UAAIC,GAAG,GAAG,oDAAmDL,UAAW,sDAAxE;AACA,UAAIM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACA,YAAK;AAACC,QAAAA,IAAD;AAAOC,QAAAA,QAAP;AAAiBC,QAAAA;AAAjB,UAA4BJ,IAAI,CAACK,IAAtC;AACA,YAAM;AAACA,QAAAA,IAAI,EAACC;AAAN,UAAoBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA1B;AACA,YAAK;AAACC,QAAAA;AAAD,UAAOR,IAAZ;AACA,YAAM;AAACS,QAAAA;AAAD,UAAST,IAAI,CAACU,IAApB;AACA,YAAM;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,UAAkBZ,IAAI,CAACa,GAA7B;AAEA,YAAMC,gBAAgB,GAAC;AACnBZ,QAAAA,IADmB;AAEnBC,QAAAA,QAFmB;AAGnBC,QAAAA,QAHmB;AAInBE,QAAAA,WAJmB;AAKnBE,QAAAA,IALmB;AAMnBC,QAAAA,KANmB;AAOnBE,QAAAA,OAPmB;AAQnBC,QAAAA;AARmB,OAAvB;AAUAjB,MAAAA,WAAW,CAACmB,gBAAD,CAAX;AACH,KArBD,CAsBA,OAAMC,KAAN,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GA1BD;;AA8BA3B,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,WAAW,EAAC,aAFhB;AAGI,UAAA,EAAE,EAAC,QAHP;AAII,UAAA,KAAK,EAAEJ,UAJX;AAKI,UAAA,QAAQ,EAAG0B,CAAD,IAAKzB,YAAY,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAExB,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,cAAD,OAAoBF;AAApB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtDQH,U;;KAAAA,U;AAwDT,eAAeA,UAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport \"../components/style.css\"\nimport WeatherDetails from './WeatherDetails';\n\nfunction SearchMain() {\n    const [searchTerm, seSearchTerm]=useState('Cancun');\n    const [tempInfo, setTempInfo]=useState({});\n\n    const getWeatherInfo= async ()=>{\n        try{\n            let url =`http://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&units=metric&appid=9bd32898ad03753167ef916bdce83639`\n            let res = await fetch(url);\n            let data = await res.json();\n            const{temp, humidity, pressure}= data.main;\n            const {main:weatherType}= data.weather[0];\n            const{name}=data;\n            const {speed}= data.wind;\n            const {country, sunset}=data.sys;\n\n            const myNewWeatherInfo={\n                temp,\n                humidity,\n                pressure,\n                weatherType,\n                name,\n                speed,\n                country,\n                sunset,\n            };\n            setTempInfo(myNewWeatherInfo);\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n\n\n\n    useEffect(() => {\n        getWeatherInfo()\n    },[]);\n    \n    return (\n        <div>\n            <div className=\"wrap\">\n                <div className=\"search\">\n                    <input\n                        type=\"search\" \n                        placeholder=\"Search City\"\n                        id=\"search\" \n                        value={searchTerm} \n                        onChange={(e)=>seSearchTerm(e.target.value)}/>\n                    <button className=\"searchButton\" onClick={getWeatherInfo}>Search</button>\n                </div>\n            </div>\n            <WeatherDetails {...tempInfo}/>\n        </div>\n    )\n}\n\nexport default SearchMain\n"]},"metadata":{},"sourceType":"module"}