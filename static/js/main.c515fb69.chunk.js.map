{"version":3,"sources":["components/WeatherDetails.js","components/searchMain.js","App.js","index.js"],"names":["WeatherDetails","temp","humidity","pressure","weatherType","name","speed","country","sunset","useState","weatherState","setweatherState","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","SearchMain","searchTerm","seSearchTerm","tempInfo","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c515fb69.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\n\nfunction WeatherDetails(\n    {temp,\n    humidity,\n    pressure,\n    weatherType,\n    name,\n    speed,\n    country,\n    sunset}\n) {\n    const [weatherState, setweatherState]=useState(\"\");\n    useEffect(() => {\n        if(weatherType){\n            switch(weatherType){\n                case \"Clouds\":\n                    setweatherState(\"wi-day-cloudy\");\n                    break;\n                case \"Haze\":\n                    setweatherState(\"wi-fog\");\n                    break;\n                case \"Clear\":\n                    setweatherState(\"wi-day-sunny\");\n                    break;\n                case \"Mist\":\n                    setweatherState(\"wi-dust\");\n                    break;\n                case \"Rain\":\n                    setweatherState(\"wi-day-rain\");\n                    break;\n                default:\n                    setweatherState(\"wi-day-sunny\");\n                    break;\n            }\n        }\n    }, [weatherType])\n    //converting the seconds in time\n    let sec=sunset;\n    let date= new Date (sec*1000);\n    let timeStr=`${date.getHours()}:${date.getMinutes()}`\n\n    return (\n        <div>\n            <article className=\"widget\">\n                <div className=\"weatherIcon\">\n                    <i className={`wi ${weatherState}`}></i>\n                </div>\n                <div className=\"weatherInfo\">\n                    <div className=\"temperature\">\n                        <span>{temp}&deg;</span>\n                    </div>\n                    <div className=\"description\">\n                        <div className=\"weatherCondition\">{weatherType}</div>\n                        <div className=\"place\">{name}, {country}</div>\n                    </div>\n                </div>\n                <div className=\"date\">{new Date().toLocaleString()}</div>\n                <div className=\"extra-temp\">\n                    <div className=\"temp-info-minmax\">\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-sunset\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                            {timeStr} PM <br/>\n                                Sunset\n                            </p>\n                        </div>\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-humidity\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {humidity} <br/>\n                                Humidity\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"temp-info-minmax\">\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-rain\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {pressure} <br/>\n                                Pressure\n                            </p>\n                        </div>\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-strong-wind\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {speed} <br/>\n                                Speed\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </div>\n    )\n}\n\nexport default WeatherDetails\n","import React,{useEffect,useState} from 'react'\nimport \"../components/style.css\"\nimport WeatherDetails from './WeatherDetails';\n\nfunction SearchMain() {\n    const [searchTerm, seSearchTerm]=useState('Cancun');\n    const [tempInfo, setTempInfo]=useState({});\n\n    const getWeatherInfo= async ()=>{\n        try{\n            let url =`http://api.openweathermap.org/data/2.5/weather?q=${searchTerm}&units=metric&appid=9bd32898ad03753167ef916bdce83639`\n            let res = await fetch(url);\n            let data = await res.json();\n            const{temp, humidity, pressure}= data.main;\n            const {main:weatherType}= data.weather[0];\n            const{name}=data;\n            const {speed}= data.wind;\n            const {country, sunset}=data.sys;\n\n            const myNewWeatherInfo={\n                temp,\n                humidity,\n                pressure,\n                weatherType,\n                name,\n                speed,\n                country,\n                sunset,\n            };\n            setTempInfo(myNewWeatherInfo);\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n\n\n\n    useEffect(() => {\n        getWeatherInfo()\n    },[]);\n    \n    return (\n        <div>\n            <div className=\"wrap\">\n                <div className=\"search\">\n                    <input\n                        type=\"search\" \n                        placeholder=\"Search City\"\n                        id=\"search\" \n                        value={searchTerm} \n                        onChange={(e)=>seSearchTerm(e.target.value)}/>\n                    <button className=\"searchButton\" onClick={getWeatherInfo}>Search</button>\n                </div>\n            </div>\n            <WeatherDetails {...tempInfo}/>\n        </div>\n    )\n}\n\nexport default SearchMain\n","import './App.css';\nimport SearchMain from './components/searchMain';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchMain />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}